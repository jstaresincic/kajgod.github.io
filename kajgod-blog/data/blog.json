{
  "title": "Kajgod blog",
  "description": "A blog about technology and philosophy",
  "posts": [
    {
      "id": 1,
      "title": "Next.js app on GitHub Pages",
      "date": "20230109",
      "hype": "<p>Starting a blog on Github Pages sounded like a good idea. Doing it in SSG-ed Next.js even better. What could possibly  go WTF?</p>",
      "content": "<p>I never tried Github Pages before, but I figured I wanted to try it out. Also, writing about code, it has a <em>clean code</em> feel to it, encapsulating the thoughts and ideas with related work.</p><p>Being an amateur artist in spare time, I figured I should have two completely separate blogs for documenting two completely separate domains, but again - the second blog should also encapsulate \"art\" with thoughts about art.</p><p>On a more-or-less unrelated note: I wanted to make a blog it would be very easy to add to. I'm planning to make a golang CMS for it which would be offline and create the content in SSG-ed HTML, easy to server on Github Pages. To lessen the code-writing I have to do (albeit complicate the process a bit) I decided to parse JSON created in CMS with Next.js. Now, Next is something I know quite well. The thought of trying something more egzotic and hip like Qwik, Fresh or Astro certainly crossed my mind, but I wanted this thing live as soon as possible, so...</p><p>Which leads us to the first WTF moment on Github Pages</p><h3>WTF, Github?</h3><p>I followed the simplest flow to getting a Github Page: create a repo named {yourName}.github.io and place static HTML in the root. To do so I could have changed a Next config, but I wanted to keep Next separated from the generated page in a separate folder, so I rather just added a copy action to build scrip like so:</p><pre>next build && next export && cp -r out/* ../</pre><p>Well, it didn't work. At all.</p><p>Since I couldn't figure out what seems to be the matter, I handcrafted a simple HTML page and put it in the root. That was fine, but when I tried to serve Next code again: nothing. Now, Next creates a folder _next where it serves JS and such. Nothing from that directory gets served on Github Pages! Hmmmm... Could it be that Pages only serves files that are in the root? You cannot use any folders? Starting to get irate, and looking into Vercel hosting and abandoning the whole <em>encapsulation</em> idea, Duck Duck Go once again came to rescue!</p><p>Believe it or not, my dear friends, Github Pages considers any folder that starts with a _ as a Jekyll folder and ignores it when serving content. WTF? I never really used Jekyll (we have some CI/CD workflow at day job using it, but I never had to do much more than restart the computer running it) and it seems so random and odd to proclaim Jekyll so important that a default setting is - whatever starts with a _ will be overtaken by it?</p><p>On a positive note, the fix is quite simple:</p><pre>next build && next export && cp -r out/* ../ && touch ../.nojekyll</pre><p>...create an empty .nojekyll file in the root, and the blog page appears. Next is quite ubiquitous these days, so I guess I'm not the only one to run into this problem, and this short rant may actually prove useful to someone. You're welcome, if that happens to be you.</p>",
      "slug": "nextjs-app-on-github-pages",
      "keywords": ["nextjs", "github", "pages"]
    },
    {
      "id": 2,
      "title": "Artists vs. AI",
      "date": "20230120",
      "hype": "<p>First in a new series of posts about the future of breadwinning artists and developers in an AI powered world. (mostly written by pressing TAB on Copilot's suggestions)</p>",
      "content": "<p>A bunch of artists I know are panicking that AI is going to take over their jobs. They could very well be right.<p><p>But I think they're missing the point. AI is not going to take over artists' jobs. It's going to take over the craftsman's jobs.</p>",
      "slug": "artists-vs-ai",
      "keywords": ["AI", "art", "craft"]
    }
  ]
}
